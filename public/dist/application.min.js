"use strict";var ApplicationConfiguration=function(){var applicationModuleName="restaurant",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("craiglists"),ApplicationConfiguration.registerModule("menufoods"),ApplicationConfiguration.registerModule("menusections"),ApplicationConfiguration.registerModule("restaurants"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("craiglists").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Craiglists","craiglists","dropdown","/craiglists(/create)?"),Menus.addSubMenuItem("topbar","craiglists","List Craiglists","craiglists")}]),angular.module("craiglists").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCraiglists",{url:"/craiglists",templateUrl:"modules/craiglists/views/list-craiglists.client.view.html"}).state("createCraiglist",{url:"/craiglists/create",templateUrl:"modules/craiglists/views/create-craiglist.client.view.html"}).state("viewCraiglist",{url:"/craiglists/:craiglistId",templateUrl:"modules/craiglists/views/view-craiglist.client.view.html"}).state("editCraiglist",{url:"/craiglists/:craiglistId/edit",templateUrl:"modules/craiglists/views/edit-craiglist.client.view.html"}).state("scrapCraiglist",{url:"/craiglists/:city/:section/:query",templateUrl:"modules/craiglists/views/scrap-craiglists.client.view.html"})}]),angular.module("craiglists").controller("CraiglistsController",["$element","$resource","$http","$scope","$stateParams","$location","Authentication","Craiglists",function($element,$resource,$http,$scope,$stateParams,$location,Authentication,Craiglists){$scope.authentication=Authentication,$scope.find=function(){},$scope.scrap=function(){var craiglists=new Craiglists({city:this.name,search:this.address});console.log(craiglists)}}]),angular.module("craiglists").controller("CraiglistsController",["$element","$resource","$http","$scope","$stateParams","$location","Authentication","Craiglists",function($element,$resource,$http,$scope,$stateParams,$location,Authentication,Craiglists){$scope.authentication=Authentication,$scope.scrap=function(){var craiglists=new Craiglists({city:this.city,search:this.search});$scope.craiglists=Craiglists.get(craiglists)}}]),angular.module("craiglists").factory("Craiglists",["$resource",function($resource){return $resource("craiglists/:craiglistId",{craiglistId:"@_id"},{update:{method:"PUT"}})}]),angular.module("menufoods").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Menus","menufoods","dropdown","/menufoods(/create)?"),Menus.addSubMenuItem("topbar","menufoods","List Menufoods","menufoods"),Menus.addSubMenuItem("topbar","menufoods","New Menufood","menufoods/create")}]),angular.module("menufoods").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMenufoods",{url:"/menufoods",templateUrl:"modules/menufoods/views/list-menufoods.client.view.html"}).state("createMenufood",{url:"/menufoods/create",templateUrl:"modules/menufoods/views/create-menufood.client.view.html"}).state("viewMenufood",{url:"/menufoods/:menufoodId",templateUrl:"modules/menufoods/views/view-menufood.client.view.html"}).state("editMenufood",{url:"/menufoods/:menufoodId/edit",templateUrl:"modules/menufoods/views/edit-menufood.client.view.html"})}]),angular.module("menufoods").controller("MenufoodsController",["$scope","$stateParams","$location","Authentication","Menufoods","Restaurants","Menusections",function($scope,$stateParams,$location,Authentication,Menufoods,Restaurants,Menusections){$scope.authentication=Authentication,$scope.create=function(){var menufood=new Menufoods({restaurant:document.getElementById("restaurant").value,section:document.getElementById("section").value,name:this.name,item:this.item,price:this.price});console.log(menufood),menufood.$save(function(response){$location.path("menufoods/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(menufood){if(menufood){menufood.$remove();for(var i in $scope.menufoods)$scope.menufoods[i]===menufood&&$scope.menufoods.splice(i,1)}else $scope.menufood.$remove(function(){$location.path("menufoods")})},$scope.update=function(){var menufood=$scope.menufood;menufood.$update(function(){$location.path("menufoods/"+menufood._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.menufoods=Menufoods.query()},$scope.findOne=function(){$scope.menufood=Menufoods.get({menufoodId:$stateParams.menufoodId})},$scope.findRestaurants=function(){$scope.menufoods=Restaurants.query()},$scope.findSections=function(){$scope.menufoods=Menusections.query()}}]),angular.module("menufoods").factory("Menufoods",["$resource",function($resource){return $resource("menufoods/:menufoodId",{menufoodId:"@_id"},{update:{method:"PUT"}})}]),angular.module("menusections").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Menu Sections","menusections","dropdown","/menusections(/create)?"),Menus.addSubMenuItem("topbar","menusections","List Menusections","menusections"),Menus.addSubMenuItem("topbar","menusections","New Menusection","menusections/create")}]),angular.module("menusections").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMenusections",{url:"/menusections",templateUrl:"modules/menusections/views/list-menusections.client.view.html"}).state("createMenusection",{url:"/menusections/create",templateUrl:"modules/menusections/views/create-menusection.client.view.html"}).state("viewMenusection",{url:"/menusections/:menusectionId",templateUrl:"modules/menusections/views/view-menusection.client.view.html"}).state("editMenusection",{url:"/menusections/:menusectionId/edit",templateUrl:"modules/menusections/views/edit-menusection.client.view.html"})}]),angular.module("menusections").controller("MenusectionsController",["$scope","$stateParams","$location","Authentication","Menusections",function($scope,$stateParams,$location,Authentication,Menusections){$scope.authentication=Authentication,$scope.create=function(){var menusection=new Menusections({name:this.name});menusection.$save(function(response){$location.path("menusections/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(menusection){if(menusection){menusection.$remove();for(var i in $scope.menusections)$scope.menusections[i]===menusection&&$scope.menusections.splice(i,1)}else $scope.menusection.$remove(function(){$location.path("menusections")})},$scope.update=function(){var menusection=$scope.menusection;menusection.$update(function(){$location.path("menusections/"+menusection._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.menusections=Menusections.query()},$scope.findOne=function(){$scope.menusection=Menusections.get({menusectionId:$stateParams.menusectionId})}}]),angular.module("menusections").factory("Menusections",["$resource",function($resource){return $resource("menusections/:menusectionId",{menusectionId:"@_id"},{update:{method:"PUT"}})}]),angular.module("restaurants").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Restaurants","restaurants","dropdown","/restaurants(/create)?"),Menus.addSubMenuItem("topbar","restaurants","List Restaurants","restaurants"),Menus.addSubMenuItem("topbar","restaurants","New Restaurant","restaurants/create")}]),angular.module("restaurants").config(["$stateProvider",function($stateProvider){$stateProvider.state("listRestaurants",{url:"/restaurants",templateUrl:"modules/restaurants/views/list-restaurants.client.view.html"}).state("createRestaurant",{url:"/restaurants/create",templateUrl:"modules/restaurants/views/create-restaurant.client.view.html"}).state("viewRestaurant",{url:"/restaurants/:restaurantId",templateUrl:"modules/restaurants/views/view-restaurant.client.view.html"}).state("editRestaurant",{url:"/restaurants/:restaurantId/edit",templateUrl:"modules/restaurants/views/edit-restaurant.client.view.html"})}]),angular.module("restaurants").controller("RestaurantsController",["$scope","$stateParams","$location","Authentication","Restaurants",function($scope,$stateParams,$location,Authentication,Restaurants){$scope.authentication=Authentication,$scope.create=function(){var restaurant=new Restaurants({name:this.name,address:this.address,street:this.street,zipcode:this.zipcode,phone:this.phone,email:this.email,cusine:this.cusine,open:this.open,close:this.close,picture_url:this.picture_url,website:this.website});restaurant.$save(function(response){$location.path("restaurants/"+response._id),$scope.name="",$scope.address="",$scope.street="",$scope.zipcode="",$scope.phone="",$scope.email="",$scope.cusine="",$scope.open="",$scope.close=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(restaurant){if(restaurant){restaurant.$remove();for(var i in $scope.restaurants)$scope.restaurants[i]===restaurant&&$scope.restaurants.splice(i,1)}else $scope.restaurant.$remove(function(){$location.path("restaurants")})},$scope.update=function(){var restaurant=$scope.restaurant;restaurant.$update(function(){$location.path("restaurants/"+restaurant._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.restaurants=Restaurants.query()},$scope.findOne=function(){$scope.restaurant=Restaurants.get({restaurantId:$stateParams.restaurantId})}}]),angular.module("restaurants").factory("Restaurants",["$resource",function($resource){return $resource("restaurants/:restaurantId",{restaurantId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);